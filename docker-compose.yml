services:
  # Zookeeper (necess√°rio para o Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  python-app:
    build: 
      context: ./python
      dockerfile: Dockerfile
    container_name: python_app
    volumes:
      - ./python:/app
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      KAFKA_BROKER: kafka:29092
      KAFKA_TOPIC: 'events'
      PYTHONUNBUFFERED: 1

    
  spark-app:
    build:
      context: ./spark
      dockerfile: Dockerfile
    container_name: spark_app
    depends_on:
      - kafka
      - postgres
      - python-app
    environment:
      KAFKA_BROKER: kafka:29092
      KAFKA_TOPIC: events
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: game_analytics
    volumes:
      - ./spark:/app
    working_dir: /app

  # PostgreSQL
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: game_analytics
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
volumes:
  postgres_data: